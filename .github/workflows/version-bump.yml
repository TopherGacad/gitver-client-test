name: Auto Version Bump

on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ dev, main ]
    types: [ closed ]

jobs:
  version-bump:
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Determine version bump type
      id: bump-type
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "type=minor" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
          echo "type=patch" >> $GITHUB_OUTPUT
        else
          echo "type=patch" >> $GITHUB_OUTPUT
        fi

    - name: Bump version
      id: version-bump
      run: |
        # Get current version
        CURRENT_VERSION=$(npm version --json | jq -r '.["your-app-name"]' 2>/dev/null || echo "1.0.0")
        
        # Bump version based on branch
        if [[ "${{ steps.bump-type.outputs.type }}" == "minor" ]]; then
          NEW_VERSION=$(npm version minor --no-git-tag-version)
        else
          NEW_VERSION=$(npm version patch --no-git-tag-version)
        fi
        
        echo "new-version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "Previous version: $CURRENT_VERSION"
        echo "New version: $NEW_VERSION"

    - name: Update version in files
      run: |
        # Update package.json (already done by npm version)
        # Update other files that might contain version
        sed -i "s/\"version\": \".*\"/\"version\": \"${{ steps.version-bump.outputs.new-version }}\"/g" package.json
        
        # If you have other files with version numbers, update them here
        # Example: sed -i "s/VERSION = .*/VERSION = '${{ steps.version-bump.outputs.new-version }}'/g" src/config.js

    - name: Commit version bump
      run: |
        git add .
        git commit -m "chore: bump version to ${{ steps.version-bump.outputs.new-version }} [skip ci]"
        
    - name: Create Git tag
      if: github.ref == 'refs/heads/main'
      run: |
        git tag -a ${{ steps.version-bump.outputs.new-version }} -m "Release ${{ steps.version-bump.outputs.new-version }}"
        
    - name: Push changes
      run: |
        git push origin ${{ github.ref_name }}
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          git push origin --tags
        fi

    - name: Create GitHub Release
      if: github.ref == 'refs/heads/main'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version-bump.outputs.new-version }}
        release_name: Release ${{ steps.version-bump.outputs.new-version }}
        draft: false
        prerelease: false