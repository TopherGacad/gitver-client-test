name: Auto Version Bump

on:
  pull_request:
    branches: [ dev, main ]
    types: [ closed ]

jobs:
  version-bump:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Determine version bump type
      id: bump-type
      run: |
        if [[ "${{ github.event.pull_request.base.ref }}" == "main" ]]; then
          echo "type=minor" >> $GITHUB_OUTPUT
          echo "branch=main" >> $GITHUB_OUTPUT
        elif [[ "${{ github.event.pull_request.base.ref }}" == "dev" ]]; then
          echo "type=patch" >> $GITHUB_OUTPUT  
          echo "branch=dev" >> $GITHUB_OUTPUT
        else
          echo "type=patch" >> $GITHUB_OUTPUT
          echo "branch=other" >> $GITHUB_OUTPUT
        fi

    - name: Bump version
      id: version-bump
      run: |
        # Get current version
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        echo "Previous version: $CURRENT_VERSION"
        
        # Bump version based on branch
        if [[ "${{ steps.bump-type.outputs.type }}" == "minor" ]]; then
          npm version minor --no-git-tag-version
        else
          npm version patch --no-git-tag-version
        fi
        
        # Get new version after bump
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "new-version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "New version: $NEW_VERSION"

    - name: Update version in files
      run: |
        # Version is already updated in package.json by npm version command
        # Add any other files that need version updates here
        echo "Version updated to $(node -p 'require(\"./package.json\").version')"

    - name: Commit version bump
      run: |
        NEW_VERSION=$(node -p "require('./package.json').version")
        git add package.json
        git commit -m "chore: bump version to v$NEW_VERSION [skip ci]"
        
    - name: Create Git tag
      if: steps.bump-type.outputs.branch == 'main'
      run: |
        NEW_VERSION=$(node -p "require('./package.json').version")
        git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
        
    - name: Push changes
      run: |
        git push origin ${{ github.event.pull_request.base.ref }}
        if [[ "${{ steps.bump-type.outputs.branch }}" == "main" ]]; then
          git push origin --tags
        fi

    - name: Create GitHub Release
      if: steps.bump-type.outputs.branch == 'main'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version-bump.outputs.new-version }}
        release_name: Release v${{ steps.version-bump.outputs.new-version }}
        draft: false
        prerelease: false